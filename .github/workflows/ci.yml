name: CI Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./ui

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: './ui/package-lock.json'
    
    - name: Install Dependencies
      run: npm install
    
    - name: Run Unit Tests
      run: npm run test:ci

  backend-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./item-service

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build and Test with Maven
      run: mvn -B test

  e2e-tests:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    defaults:
      run:
        working-directory: ./e2e

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: |
          ./e2e/package-lock.json
          ./ui/package-lock.json
    
    - name: Install E2E Dependencies
      run: npm ci
    
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps chromium firefox webkit
    
    - name: Install and Build Frontend
      working-directory: ./ui
      run: |
        npm install
        npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Start Docker Compose
      working-directory: ./
      run: |
        docker compose version
        docker compose up -d --build
        docker compose ps
    
    - name: Run E2E Tests
      run: npx playwright test
      env:
        CI: true
    
    - name: Docker Compose Logs
      if: always()
      working-directory: ./
      run: docker compose logs
    
    - name: Upload Playwright Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: playwright-report
        path: |
          ./e2e/playwright-report/
          ./e2e/test-results/
        retention-days: 30
    
    - name: Stop Docker Compose
      if: always()
      working-directory: ./
      run: docker compose down -v 